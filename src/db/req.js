


[{
	"№ п/п в графике": 2,
	"Годовой график <br> СИ": "2023",
	"Поздразделение эксплуатант": "Department B",
	"Индивидуальный <br> номер СИ": "67890",
	"checked": false,
	"Шифр состояния <br> СИ": "Calibration due",
	"Наимнование": "Measurement device 2",
	"Тип/модель <br> СИ": "Model 2",
	"Диапазон <br> измерений": "0-50",
	"Ответственный": "Jane Smith",
	"Функциональная <br> ответственность": "Testing",
	"Дата <br> установления": "2021-06-15",
	"Дата <br> следующей <br> поверки": "2022-06-15",
	"Периодичность <br> поверки": "1 year"
},
{
	"№ п/п в графике": 3,
	"Годовой график <br> СИ": "2023",
	"Поздразделение эксплуатант": "Department C",
	"Индивидуальный <br> номер СИ": "24680",
	"checked": true,
	"Шифр состояния <br> СИ": "Needs repair",
	"Наимнование": "Measurement device 3",
	"Тип/модель <br> СИ": "Model 3",
	"Диапазон <br> измерений": "0-500",
	"Ответственный": "Peter Brown",
	"Функциональная <br> ответственность": "Calibration",
	"Дата <br> установления": "2022-03-15",
	"Дата <br> следующей <br> поверки": "2024-03-15",
	"Периодичность <br> поверки": "2 years"
},
{
	"№ п/п в графике": 4,
	"Годовой график <br> СИ": "2023",
	"Поздразделение эксплуатант": "Department D",
	"Индивидуальный <br> номер СИ": "13579",
	"checked": false,
	"Шифр состояния <br> СИ": "Out of service",
	"Наимнование": "Measurement device 4",
	"Тип/модель <br> СИ": "Model 4",
	"Диапазон <br> измерений": "0-2000",
	"Ответственный": "Emily Green",
	"Функциональная <br> ответственность": "Monitoring",
	"Дата <br> установления": "2021-12-01",
	"Дата <br> следующей <br> поверки": "N/A",
	"Периодичность <br> поверки": "N/A"
}
]


export function createRequest(data) {


	const db = {
		0: 1,
		1: "2023",
		2: "Department A",
		3: "12345",
		4: false,
		5: "OK",
		6: "Measurement device 1",
		7: "Model 1",
		8: "0-100",
		9: "John Doe",
		10: "Maintenance",
		11: "2022-01-01",
		12: "2024-01-01",
		13: "2 years"
	}

	// где-то здесь запрос
	let res = new Array(Math.floor(Math.random() * 30))
		.fill('')
		.map(_ => {
			return db
		})

	return res
}